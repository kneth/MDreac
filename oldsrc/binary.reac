CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C DoReactions for the mechanism:
C A + B <-> 2B
C A + B <-> 2A
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      SUBROUTINE DoReactions(time)

      IMPLICIT NONE
      INCLUDE 'mdreac.inc'
#include "mdreac.common"

      INTEGER time

      INTEGER i, j, k, ilab, jlab
      REAL*8  rxij, ryij, r2, r6, drandy


      nr1=0
      nr2=0
      nr3=0
      nr4=0
      nr5=0
      nr6=0

C First odd pairs
      DO k=1, numbpair2
         i=ipair2(k)
         j=jpair2(k)
         ilab=label(i)
         jlab=label(j)
         IF (ilab .NE. jlab) THEN
            rxij=qx(i)-qx(j)+xper2(k)
            ryij=qy(i)-qy(j)+yper2(k)
            r2=rxij**2+ryij**2
            IF (r2 .LT. rreac2) THEN
               CALL RandUnit(drandy)
               IF (drandy .LT. prob1) THEN
                  CALL RandUnit(drandy)
                  IF (drandy .LT. 0.5) THEN
                     label(i)=0
                     label(j)=0
                     nr1=nr1+1
                  ELSE
                     label(i)=1
                     label(j)=1
                     nr2=nr2+1
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO

C Then even pairs
      DO k=1, numbpair1
         i=ipair1(k)
         j=jpair1(k)
         ilab=label(i)
         jlab=label(j)
         IF ((ilab .EQ. 0) .AND. (jlab .EQ. 0)) THEN
            rxij=qx(i)-qx(j)+xper1(k)
            ryij=qy(i)-qy(j)+yper1(k)
            r2=rxij**2+ryij**2
            IF (r2 .LT. rreac2) THEN
               CALL RandUnit(drandy)
               IF (drandy .LT. prob2) THEN
                  label(i)=1
                  label(j)=0
                  nr3=nr3+1
               ENDIF
            ENDIF
         ELSEIF ((ilab .EQ. 1) .AND. (jlab .EQ. 1)) THEN
            rxij=qx(i)-qx(j)+xper1(k)
            ryij=qy(i)-qy(j)+yper1(k)
            r2=rxij**2+ryij**2
            IF (r2 .LT. rreac2) THEN
               CALL RandUnit(drandy)
               IF (drandy .LT. prob3) THEN
                  label(i)=1
                  label(j)=0
                  nr4=nr4+1
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      END


#ifdef PVM_VER

      SUBROUTINE DoReactionsPVM
      
      IMPLICIT NONE
      INCLUDE 'mdreac.inc'
#include "mdreac.common"

      INTEGER icell, jcell, ip, jp, jx, ilab, jlab, jc
      REAL*8  rxi, ryi, rxij, ryij, r2, drandy

      DO icell=lastcell-Mcell+1, lastcell
         ip=head(icell)
 3020    IF (ip .NE. 0) THEN
            rxi=qx(ip)
            ryi=qy(ip)
            ilab=label(ip)
            DO jc=1, 3
               jx=map(4*(icell-1)+jc)
               jp=head(jx)
 3030          IF (jp .NE. 0) THEN
                  jlab=label(jp)
                  
C Check which reaction to do 
C 2A -> A+B
                  IF ((ilab .EQ. 0) .AND. (jlab .EQ. 0)) THEN
                     rxij=rxi-qx(jp)
                     ryij=ryi-qy(jp)
                     IF (rxij .GE. Len2) THEN
                        rxij=rxij-Len
                     ELSEIF (rxij .LE. Len2m) THEN
                        rxij=rxij+Len
                     ENDIF
                     IF (ryij .GE. Len2) THEN
                        ryij=ryij-Len
                     ELSEIF (ryij .LE. Len2m) THEN
                        ryij=ryij+Len
                     ENDIF
                     r2=rxij**2+ryij**2
                     IF (r2 .LT. rreac2) THEN
                        CALL RandUnit(drandy)
                        IF (drandy .LT. prob2) THEN
                           ilab=1
                           label(jp)=0
                           nr3=nr3+1
                        ENDIF
                     ENDIF
C 2B -> A+B
                  ELSE IF ((ilab .EQ. 1) .AND. (jlab .EQ. 1)) THEN
                     rxij=rxi-qx(jp)
                     ryij=ryi-qy(jp)
                     IF (rxij .GE. Len2) THEN
                        rxij=rxij-Len
                     ELSEIF (rxij .LE. Len2m) THEN
                        rxij=rxij+Len
                     ENDIF
                     IF (ryij .GE. Len2) THEN
                        ryij=ryij-Len
                     ELSEIF (ryij .LE. Len2m) THEN
                        ryij=ryij+Len
                     ENDIF
                     r2=rxij**2+ryij**2
                     IF (r2 .LT. rreac2) THEN
                        CALL RandUnit(drandy)
                        IF (drandy .LT. prob3) THEN
                           ilab=1
                           label(jp)=0
                           nr4=nr4+1
                        ENDIF
                     ENDIF
C A+B -> 2A or 2B
                  ELSE IF (((ilab .EQ. 1) .AND. (jlab .EQ. 0)) .OR.
     _                    ((ilab .EQ. 0) .AND. (jlab .EQ. 1))) THEN
                     rxij=rxi-qx(jp)
                     ryij=ryi-qy(jp)
                     IF (rxij .GE. Len2) THEN
                        rxij=rxij-Len
                     ELSEIF (rxij .LE. Len2m) THEN
                        rxij=rxij+Len
                     ENDIF
                     IF (ryij .GE. Len2) THEN
                        ryij=ryij-Len
                     ELSEIF (ryij .LE. Len2m) THEN
                        ryij=ryij+Len
                     ENDIF
                     r2=rxij**2+ryij**2
                     IF (r2 .LT. rreac2) THEN
                        CALL RandUnit(drandy)
                        IF (drandy .LT. prob1) THEN
                           CALL RandUnit(drandy)
                           IF (drandy .LT. 0.5) THEN
                              ilab=0
                              label(jp)=0
                              nr1=nr1+1
                           ELSE
                              ilab=1
                              label(jp)=1
                              nr2=nr2+1
                           ENDIF
                        ENDIF
                     ENDIF
                  ENDIF
                  jp=list(jp)
                  GOTO 3030
               ENDIF
            ENDDO
            label(ip)=ilab
            ip=list(ip)
            GOTO 3020
         ENDIF
      ENDDO
      END
#endif /* PVM_VER */
